// <auto-generated />
using System;
using GymApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymApi.Data.Migrations
{
    [DbContext(typeof(GymDbContext))]
    partial class GymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("GymApi.Models.Ejercicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<string>("explicacion")
                        .HasColumnType("text");

                    b.Property<string>("foto1")
                        .HasColumnType("longtext");

                    b.Property<string>("foto2")
                        .HasColumnType("longtext");

                    b.Property<string>("foto3")
                        .HasColumnType("longtext");

                    b.Property<string>("video1")
                        .HasColumnType("longtext");

                    b.Property<string>("video2")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("GymApi.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Ciudad")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen1")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen2")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen3")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NIF")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int?>("ejerciciosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ejerciciosId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GymApi.Models.Usuarios", b =>
                {
                    b.HasOne("GymApi.Models.Ejercicios", "ejercicios")
                        .WithMany("usuarios")
                        .HasForeignKey("ejerciciosId");

                    b.Navigation("ejercicios");
                });

            modelBuilder.Entity("GymApi.Models.Ejercicios", b =>
                {
                    b.Navigation("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
